# Interview Q/ACCESS

---------------------------------------------------------------------------------------


`1.What is difference between NACL & Security Group? `

`2. What is difference between NAT instance & NAT Gateway? `

`3.What Type of Traffic does NAT GAteway allows? `

`4. What does terraform init does? `

`5. What is the  use terraform state files? `

`6. What is use of count and interpolation in terraform? `

`7.What are k8s master components and their use? `

`8. Can we deploy a pod to specific node? Yes `

`9. How to allow  pod  A to access  pod B , only accessible to POD A? Using pod network policy. `

`10. Difference between Configmap & Secret? `

`11. Can we pass env variables to a pod using Configmap & Secret? Yes `

`12. Where to define env variables in deployment yaml file? `

`13. Pod affinity & Pod life cycle? `

`14. Different types of Docker Network ? Diff. between overlay & Bridge ? `

`15. Difference Between ADD & COPY , CMD & ENTRYPOINT . Can we override entrypoint as well ? Yes We can using docker run imagename --entrypoint flag . `

`16. Difference between Pod, Statefulset & Deployment.`

`17. 3 master node in Kubernetes ? what if 2 goes down what will happen.`

`18. Diff. between PV & PVC?. `


21. What does serverless mean to you ?.
Serverless computing is a cloud computing execution model in which the cloud provider allocates machine resources on demand, taking care of the servers on behalf of their customers.

22. What is continuous Integration?
Continuous integration (CI) is the practice of automating the integration of code changes from multiple contributors into a single software project.

23. What is CIDR?
Classless inter-domain routing (CIDR), which stands for Classless Inter-Domain Routing, is an IP addressing scheme that improves the allocation of IP addresses. It replaces the old system based on classes A, B, and C. This scheme also helped greatly extend the life of IPv4 as well as slow the growth of routing tables.

26. What is the use of replica set ?.
A ReplicaSet ensures that a specified number of pod replicas are running at any given time. However, a Deployment is a higher-level concept that manages ReplicaSets and provides declarative updates to Pods along with a lot of other useful features. Therefore, we recommend using Deployments instead of directly using ReplicaSets, unless you require custom update orchestration or don't require updates at all. This actually means that you may never need to manipulate ReplicaSet objects: use a Deployment instead, and define your application in the spec section.

28. Diff types of EC2 instances ?.

General Purpose: The most popular; used for web servers, development environments, etc.
Compute Optimized: Good for compute-intensive applications such as some scientific modeling or high-performance web servers.
Memory Optimized: Used for anything that needs memory-intensive applications, such as real-time big data analytics, or running Hadoop or Spark.
Accelerated Computing: Include additional hardware (GPUs, FPGAs) to provide massive amounts of parallel processing for tasks such as graphics processing.
Storage Optimized: Ideal for tasks that require huge amounts of storage, specifically with sequential read-writes, such as log processing.


30. What are the different types of secrets available in Kubernetes ?. https://kubernetes.io/docs/concepts/configuration/secret/

Opaque arbitrary                                    - user-defined data
kubernetes.io/service-account-token  - service account token
kubernetes.io/dockercfg                       – serialized  ~/.dockercfg file
kubernetes.io/dockerconfigjson          - serialized ~/.docker/config.json file.
kubernetes.io/basic-auth                      - credentials for basic authentication.
kubernetes.io/ssh-auth                         - credentials for SSH authentication.
kubernetes.io/tls                                    - data for a TLS client or server.
bootstrap.kubernetes.io/token             - bootstrap token data.

31. What are the different ways you can apply probes, (liveness or readiness) for a container ?. https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
32. How do you change the priority of a running process ?. https://www.thegeekstuff.com/2013/08/nice-renice-command-examples/
 
33. Different taint effects ?. 
https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/

35. How does Terraform load all the plugins ?.
https://www.terraform.io/docs/extend/how-terraform-works.html
After locating any installed plugins, terraform init compares them to the configuration's version constraints and chooses a version for each plugin as follows:
• If any acceptable versions are installed, Terraform uses the newest installed version that meets the constraint (even if the Terraform Registry has a newer acceptable version).
• If no acceptable versions are installed and the plugin is one of the providers distributed by HashiCorp, Terraform downloads the newest acceptable version from the Terraform Registry and saves it in a subdirectory under .terraform/providers/.
• If no acceptable versions are installed and the plugin is not distributed in the Terraform Registry, initialization fails and the user must manually install an appropriate version.	

38. What is the difference between provider and provisioner in Terraform ?.
Provisioners are used for executing scripts or shell commands on a local or remote machine as part of resource creation/deletion. They are similar to “EC2 instance user data” scripts that only run once on the creation and if it fails terraform marks it tainted.
 
39. What are the different networks in Docker ?.
Docker’s networking subsystem is pluggable, using drivers. Several drivers exist by default, and provide core networking functionality:
• bridge:  The default network driver. If you don’t specify a driver, this is the type of network you are creating. Bridge networks are usually used when your applications run in standalone containers that need to communicate. See bridge networks.
• host: For standalone containers, remove network isolation between the container and the Docker host, and use the host’s networking directly. See use the host network.
• overlay: Overlay networks connect multiple Docker daemons together and enable swarm services to communicate with each other. You can also use overlay networks to facilitate communication between a swarm service and a standalone container, or between two standalone containers on different Docker daemons. This strategy removes the need to do OS-level routing between these containers. See overlay networks.
• macvlan: Macvlan networks allow you to assign a MAC address to a container, making it appear as a physical device on your network. The Docker daemon routes traffic to containers by their MAC addresses. Using the macvlan driver is sometimes the best choice when dealing with legacy applications that expect to be directly connected to the physical network, rather than routed through the Docker host’s network stack. See Macvlan networks.
• none: For this container, disable all networking. Usually used in conjunction with a custom network driver. none is not available for swarm services. See disable container networking.
Network driver summary
• User-defined bridge networks are best when you need multiple containers to communicate on the same Docker host.
• Host networks are best when the network stack should not be isolated from the Docker host, but you want other aspects of the container to be isolated.
• Overlay networks are best when you need containers running on different Docker hosts to communicate, or when multiple applications work together using swarm services.
• Macvlan networks are best when you are migrating from a VM setup or need your containers to look like physical hosts on your network, each with a unique MAC address.
• Third-party network plugins allow you to integrate Docker with specialized network stacks.

50. Different storage classes in AWS ?.

Amazon S3 Standard (S3 Standard)
Amazon S3 Intelligent-Tiering (S3 Intelligent-Tiering)
Amazon S3 Standard-Infrequent Access (S3 Standard-IA)
Amazon S3 One Zone-Infrequent Access (S3 One Zone-IA)
Amazon S3 Glacier (S3 Glacier)
Amazon S3 Glacier Deep Archive (S3 Glacier Deep Archive)
S3 Outposts storage class : object storage to your on-premises AWS Outposts environment. Using the S3 APIs and features available in AWS Regions today, S3 on Outposts makes it easy to store and retrieve data on your Outpost, as well as secure the data, control access, tag, and report on it. S3 on Outposts provides a single Amazon S3 storage class, named S3 Outposts, which uses the S3 APIs, and is designed to durably and redundantly store data across multiple devices and servers on your Outposts.

52. What is K8S object that helps in autoscaling ?.
    HPA & Cluster Autoscaler

53. Diff. between fault tolerance and Disaster recovery ?.

Fault tolerant design ensures that system is up and working even in faulty scenarios. When you app / business can afford some time otherwise High Availablity will be reuired if don’t want any downtime.

Disaster recovery ensures that in situation when there is damage beyond repair, system is able to preserve key data and bring up servers in same state. Disaster can be failure of components or entire physical infrastructure.

40. What does docker run --network=none nginx do ?.
 Disables all incoming and outgoing networking

19. what is terraform state file & terraform lock ?.
20. Can I rollback a node upgrade?
24. What is init container? Why do we need it ?.
25. Pod restart policies available ?.
27. What are the different storage classes ?.
29. Is it possible to edit the specifications of existing pod for modifying the resource limits ?.
34. Suppose I have three nodes, one of the, I have labelled as LARGE and I want my data processing pod to go on the node which is labelled as LARGE what should be done ?.
36. What is VPC peering ?.
37. What is null resource in Terraform ?.
51. What is the difference between scaling and autoscaling ?.
54. Tell me about a time when you took on something significant outside your area of responsibility and why was that important ?.


